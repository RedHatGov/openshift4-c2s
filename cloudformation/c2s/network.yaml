AWSTemplateFormatVersion: 2010-09-09
Description: Template for OpenShift Cluster Network Elements (Route53 & LBs)

Parameters:
  ClusterName:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: >-
      Cluster name must be alphanumeric, start with a letter, and have a
      maximum of 27 characters.
    Description: >-
      A short, representative cluster name to use for host names and other
      identifying names. You should use the value specified when generating the
      install-config.yaml file using `openshift-install create install-config`.
    Type: String

  InfrastructureName:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: >-
      Infrastructure name must be alphanumeric, start with a letter, and have
      a maximum of 27 characters.
    Description: >-
      A short, unique cluster ID used to tag cloud resources and identify items
      owned or used by the cluster. You should use the value generated when
      creating the manifest files using `openshift-install create manifests`.
    Type: String

  HostedZoneId:
    Description: >-
      The Route53 public zone ID to register the targets with,
      such as Z21IXYZABCZ2A4.
    Type: String

  HostedZoneName:
    Description: >-
      The Route53 zone to register the targets with, such as "example.com".
    Type: String

  PublicSubnets:
    Description: >-
      The internet-facing subnets.
    Type: List<AWS::EC2::Subnet::Id>

  PrivateSubnets:
    Description: >-
      The internal subnets.
    Type: List<AWS::EC2::Subnet::Id>

  Route53Enabled:
    AllowedValues:
      - "true"
      - "false"
    Description: >-
      Should the cluster be configured to use Route53 for DNS?
    Default: "true"
    Type: String

  Publish:
    AllowedValues:
      - "Internal"
      - "External"
    Description: >-
      Should the cluster be accessible from outside the VPC?
    Default: "External"
    Type: String

  VpcId:
    Description: >-
      The VPC-scoped resources will belong to this VPC.
    Type: AWS::EC2::VPC::Id

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Cluster Information"
        Parameters:
          - ClusterName
          - InfrastructureName
      - Label:
          default: "Network Configuration"
        Parameters:
          - Publish
          - VpcId
          - PublicSubnets
          - PrivateSubnets
      - Label:
          default: "DNS"
        Parameters:
          - Route53Enabled
          - HostedZoneName
          - HostedZoneId
    ParameterLabels:
      ClusterName:
        default: "Cluster Name"
      InfrastructureName:
        default: "Infrastructure Name"
      Publish:
        default: "Publish External"
      VpcId:
        default: "VPC ID"
      PublicSubnets:
        default: "Public Subnets"
      PrivateSubnets:
        default: "Private Subnets"
      HostedZoneName:
        default: "Public Hosted Zone Name"
      HostedZoneId:
        default: "Public Hosted Zone ID"
      Route53Enabled:
        default: "Use Route53 DNS"

Conditions:
  DoRoute53: !Equals ["true", !Ref Route53Enabled]
  DoExternal: !Equals ["External", !Ref Publish]
  DoExternalRoute53: !And [!Equals ["true", !Ref Route53Enabled], !Equals ["External", !Ref Publish]]

Resources:
  ExtApiElb:
    Condition: DoExternal
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ["-", [!Ref InfrastructureName, "ext"]]
      IpAddressType: ipv4
      Subnets: !Ref PublicSubnets
      Type: network
      Tags:
        - Key: "Name"
          Value: !Join ["-", [!Ref InfrastructureName, "ext"]]
        - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
          Value: owned

  IntApiElb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ["-", [!Ref InfrastructureName, "int"]]
      Scheme: internal
      IpAddressType: ipv4
      Subnets: !Ref PrivateSubnets
      Type: network
      Tags:
        - Key: "Name"
          Value: !Join ["-", [!Ref InfrastructureName, "int"]]
        - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
          Value: owned

  IntDns:
    Condition: DoRoute53
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Managed by CloudFormation"
      Name: !Join [".", [!Ref ClusterName, !Ref HostedZoneName]]
      VPCs:
        - VPCId: !Ref VpcId
          VPCRegion: !Ref "AWS::Region"
      HostedZoneTags:
        - Key: Name
          Value: !Join ["-", [!Ref InfrastructureName, "int"]]
        - Key: !Join ["", ["kubernetes.io/cluster/", !Ref InfrastructureName]]
          Value: "owned"

  ExternalApiServerRecord:
    Condition: DoExternalRoute53
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Alias record for the API server
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name:
            !Join [
              ".",
              [
                "api",
                !Ref ClusterName,
                !Join ["", [!Ref HostedZoneName, "."]]
              ]
            ]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
            DNSName: !GetAtt ExtApiElb.DNSName

  InternalApiServerRecord:
    Condition: DoRoute53
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Alias record for the API server
      HostedZoneId: !Ref IntDns
      RecordSets:
        - Name:
            !Join [
              ".",
              [
                "api",
                !Ref ClusterName,
                !Join ["", [!Ref HostedZoneName, "."]]
              ]
            ]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
            DNSName: !GetAtt IntApiElb.DNSName
        - Name:
            !Join [
              ".",
              [
                "api-int",
                !Ref ClusterName,
                !Join ["", [!Ref HostedZoneName, "."]]
              ]
            ]
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt IntApiElb.CanonicalHostedZoneID
            DNSName: !GetAtt IntApiElb.DNSName

  ExternalApiListener:
    Condition: DoExternal
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: ExternalApiTargetGroup
      LoadBalancerArn:
        Ref: ExtApiElb
      Port: 6443
      Protocol: TCP

  ExternalApiTargetGroup:
    Condition: DoExternal
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [!Ref InfrastructureName, "aext"]]
      Port: 6443
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VpcId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Tags:
        - Key: "Name"
          Value: !Join ["-", [!Ref InfrastructureName, "aext"]]
        - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
          Value: owned

  InternalApiListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: InternalApiTargetGroup
      LoadBalancerArn:
        Ref: IntApiElb
      Port: 6443
      Protocol: TCP

  InternalApiTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [!Ref InfrastructureName, "aint"]]
      Port: 6443
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VpcId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Tags:
        - Key: "Name"
          Value: !Join ["-", [!Ref InfrastructureName, "aint"]]
        - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
          Value: owned

  InternalServiceInternalListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: InternalServiceTargetGroup
      LoadBalancerArn:
        Ref: IntApiElb
      Port: 22623
      Protocol: TCP

  InternalServiceTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [!Ref InfrastructureName, "sint"]]
      Port: 22623
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VpcId
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      Tags:
        - Key: "Name"
          Value: !Join ["-", [!Ref InfrastructureName, "sint"]]
        - Key: !Join ["", [kubernetes.io/cluster/, !Ref InfrastructureName]]
          Value: owned

Outputs:
  PrivateHostedZoneId:
    Description: Hosted zone ID for the private DNS.
    Value: !Ref IntDns

#  ExternalApiLoadBalancerName:
#    Description: Full name of the external API load balancer.
#    Value: !GetAtt ExtApiElb.LoadBalancerFullName

  InternalApiLoadBalancerName:
    Description: Full name of the internal API load balancer.
    Value: !GetAtt IntApiElb.LoadBalancerFullName

  ApiServerDnsName:
    Description: Full hostname of the API server.
    Value: !Join [".", ["api-int", !Ref ClusterName, !Ref HostedZoneName]]

#  ExternalApiTargetGroupArn:
#    Description: ARN of the external API target group.
#    Value: !Ref ExternalApiTargetGroup

  InternalApiTargetGroupArn:
    Description: ARN of the internal API target group.
    Value: !Ref InternalApiTargetGroup

  InternalServiceTargetGroupArn:
    Description: ARN of the internal service target group.
    Value: !Ref InternalServiceTargetGroup
